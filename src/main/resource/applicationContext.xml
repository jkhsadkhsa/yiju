<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- spring 和 Mybatis 的整合   -->
    <!--  1. 配置数据库相关参数   -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--  2. 配置数据源-->
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="10"/>
        <property name="minPoolSize" value="2"/>
    </bean>

    <!-- 3. 配置sqlSessionFactory对象   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--   注入数据库连接池     -->
        <property name="dataSource" ref="datasource"/>
        <!--   扫描 bean 层包 使用别名      -->
        <property name="typeAliasesPackage" value="com.yiju.bean"/>
        <!--   配合加载映射文件 *mapper.xml     -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!-- 分页配置 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">mysql</prop>
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>

        <property name="configuration">
            <!--当数据库里的字段名和Java文件的封装类名字不一致时
                1、可以使用驼峰映射自动忽略大小写和下划线
                2、@Param()注释与数据库字段名保持一致
                否则查询结果无法封装到实体类中，查询结果可能为空-->
            <bean class="org.apache.ibatis.session.Configuration">
                <!--可以加入驼峰命名法其他mybatis的配置也就是mybatis.cfg.xml的相关配置都会转移到这里-->
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>
    <!--  自动生成dao，mapper  -->
    <!--  4. 配置扫描dao接口包，将dao层注入spring容器中  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--   配置给出需要扫描的dao层路径      -->
        <property name="basePackage" value="com.yiju.dao"/>
        <!--  注入 Spring容器中   -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--  自动扫描全部包 ,注解支持  -->
    <context:component-scan base-package="com.yiju"/>
    <!--   6. 配置事务注解  -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>
    <!--  7. 开启事物  -->
    <tx:annotation-driven/>
</beans>